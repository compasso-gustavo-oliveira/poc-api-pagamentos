@using System.Configuration
@using PoCAPIPagamento.APIMercadoPago.Controllers
@using PoCAPIPagamento.APIMercadoPago.Models.ViewModels
@model PoCAPIPagamento.APIMercadoPago.Models.ViewModels.TestCardViewModel

<div class="jumbotron">
    <h1>Testes Com Cartões</h1>
    @*<p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS, and JavaScript.</p>
        <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>*@
</div>
<div class="row">
    <div class="col-md-8 col-lg-4">
        <h2>Lista de dados válidos de cartões de teste</h2>
        <p>
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th style="text-align: left;">Cartão</th>
                        <th style="text-align: center;">Número</th>
                        <th style="text-align: center;">Código de segurança</th>
                        <th style="text-align: center;">Data de vencimento</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="text-align: left;">Mastercard</td>
                        <td style="text-align: center;">5031 4332 1540 6351</td>
                        <td style="text-align: center;">123</td>
                        <td style="text-align: center;">11/25</td>
                    </tr>
                    <tr>
                        <td style="text-align: left;">Visa</td>
                        <td style="text-align: center;">4235 6477 2802 5682</td>
                        <td style="text-align: center;">123</td>
                        <td style="text-align: center;">11/25</td>
                    </tr>
                    <tr>
                        <td style="text-align: left;">American Express</td>
                        <td style="text-align: center;">3753 651535 56885</td>
                        <td style="text-align: center;">1234</td>
                        <td style="text-align: center;">11/25</td>
                    </tr>
                </tbody>
            </table>
        </p>
    </div>
    @using (var form = Html.BeginForm())
    {
<div class="col-md-4">
    <h3>Detalhe do comprador</h3>
    <div>
        <div>
            <label for="email">E-mail</label>
            <input id="email" name="email" type="text" value="test@test.com" />
        </div>
        <div>
            <label for="docType">Tipo de documento</label>
            <select id="docType" name="docType" data-checkout="docType" type="text"></select>
        </div>
        <div>
            <label for="docNumber">Número do documento</label>
            <input id="docNumber" name="docNumber" data-checkout="docNumber" type="text" />
        </div>
    </div>
</div>
<div class="col-md-4">
    <h3>Detalhes do cartão</h3>
    <div>
        <div>
            <label for="cardholderName">Titular do cartão</label>
            <input id="cardholderName" data-checkout="cardholderName" type="text">
        </div>
        <div>
            <label for="">Data de vencimento</label>
            <div>
                <input type="text" placeholder="MM" id="cardExpirationMonth" data-checkout="cardExpirationMonth"
                       onselectstart="return false" onpaste="return false"
                       oncopy="return false" oncut="return false"
                       ondrag="return false" ondrop="return false" autocomplete=off>
                <span class="date-separator">/</span>
                <input type="text" placeholder="YY" id="cardExpirationYear" data-checkout="cardExpirationYear"
                       onselectstart="return false" onpaste="return false"
                       oncopy="return false" oncut="return false"
                       ondrag="return false" ondrop="return false" autocomplete=off>
            </div>
        </div>
        <div>
            <label for="cardNumber">Número do cartão</label>
            <input type="text" id="cardNumber" data-checkout="cardNumber"
                   onselectstart="return false" onpaste="return false"
                   oncopy="return false" oncut="return false"
                   ondrag="return false" ondrop="return false" autocomplete=off>
        </div>
        <div>
            <label for="securityCode">Código de segurança</label>
            <input id="securityCode" data-checkout="securityCode" type="text"
                   onselectstart="return false" onpaste="return false"
                   oncopy="return false" oncut="return false"
                   ondrag="return false" ondrop="return false" autocomplete=off>
        </div>
        <div id="issuerInput">
            <label for="issuer">Banco emissor</label>
            <select id="issuer" name="issuer" data-checkout="issuer"></select>
        </div>
        <div>
            <label for="installments">Parcelas</label>
            <select type="text" id="installments" name="installments"></select>
        </div>
        <div>
            <input type="hidden" name="transactionAmount" id="transactionAmount" value="100" />
            <input type="hidden" name="paymentMethodId" id="paymentMethodId" />
            <input type="hidden" name="description" id="description" />
            <br>
            <button type="submit">Pagar</button>
            <br>
        </div>
    </div>
    </div>
</div>
    <div class="col-md-4">
        <h2>Escolha o resultado esperado para o pagamento</h2>
        <p>
            <div class="input-group">
                @Html.LabelFor(m => m.Payer, "Reultado")
                @Html.DropDownListFor(m => m.Payer,
                    ((TestCardViewModel.TestCardResponseEnum[])Enum.GetValues(typeof(TestCardViewModel.TestCardResponseEnum)))
                        .Select(e => new SelectListItem() { Text = e.ToDescriptionString(), Value = e.ToString() }),
                    "Selecione um resultado")
            </div>
            <hr />
            <div class="input-group">
                <input type="submit" value="Testar Cartão &raquo;" class="btn btn-default" />
            </div>
        </p>
    </div>
    }
</div>
@section scripts
{
    <script type="text/javascript">
        $(document).ready(() => {
            //Configurando chave pública
            window.Mercadopago.setPublishableKey("@ConfigurationManager.AppSettings["APIKeys:PublicKey"]");

            // Obtendo tipos de documento disponíveis (como CPF ou CNPJ)
            window.Mercadopago.getIdentificationTypes();

            // Obtendo o método de pagamento do cartão
            $("#cardNumber").on("change", guessPaymentMethod);

            function guessPaymentMethod(event) {
                let cardnumber = $("#cardNumber").val();
                if (cardnumber.length >= 6) {
                    let bin = cardnumber.substring(0, 6);
                    window.Mercadopago.getPaymentMethod({
                        "bin": bin
                    }, setPaymentMethod);
                }
            };

            function setPaymentMethod(status, response) {
                if (status == 200) {
                    let paymentMethod = response[0];
                    $("#paymentMethodId").val(paymentMethod.id);

                    getIssuers(paymentMethod.id);
                } else {
                    alert(`payment method info error: ${response}`);
                }
            }

            // Obtendo banco emissor
            function getIssuers(paymentMethodId) {
                window.Mercadopago.getIssuers(
                    paymentMethodId,
                    setIssuers
                );
            }

            function setIssuers(status, response) {
                if (status == 200) {
                    let issuerSelect = $("#issuer");
                    response.forEach(issuer => {
                        issuerSelect
                            .appendChild(
                                $(`<option value=${issuer.id}>${issuer.name}</option>`)
                            );
                    });

                    getInstallments(
                        document.getElementById('paymentMethodId').value,
                        document.getElementById('transactionAmount').value,
                        issuerSelect.value
                    );
                } else {
                    alert(`Erro ao definir emissor: ${response}`);
                }
            }

            // Gerando token do cartão
            doSubmit = false;
            $("#paymentForm").on("submit", getCardToken);
            function getCardToken(event) {
                event.preventDefault();
                if (!doSubmit) {
                    let $form = $("#paymentForm");
                    window.Mercadopago.createToken($form, setCardTokenAndPay);
                    return false;
                }
            };

            function setCardTokenAndPay(status, response) {
                if (status == 200 || status == 201) {
                    let form = $("#paymentForm");
                    let card = $(`<input name="token" type="hidden" value=${response.id} />`);
                    form.appendChild(card);
                    doSubmit = true;
                    form.submit();
                } else {
                    alert("Verifique os dados preenchidos!\n" + JSON.stringify(response, null, 4));
                }
            };
        });
    </script>
}